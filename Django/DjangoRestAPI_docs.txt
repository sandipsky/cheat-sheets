---Install django Rest Framework

pip install djangorestframework

on project settings.py 
go to INSTALLED_APPS add
'rest_framework',

---------------------------------------------------

use other database such as mysql for live or big projects

--------------------------------------------------------------------------

-------------create serializers.py
from rest_framewotk import serializers
from .model import Task

class TaskSerializer(serializers.ModelSerializer):
	class Meta:
		model = Task
		fields = '__all__'

-----------------------------------------------------------------------------

-----on views.py add 
-----for function based views

from rest_framework.decorators import api_view
from rest_framework.response import Response
from .serializers import TaskSerializer
from .models import Task

#api view decorator for allowing GET, POST methods

@api_view(['GET'])
def taskList(request):
	tasks = Task.objects.all()
	serializer = TaskSerializer(tasks, many=True)
	return Response(serializer.data)

@api_view(['GET'])
def taskDetail(request, pk):
	tasks = Task.objects.get(id=pk)
	serializer = TaskSerializer(tasks, many=False)
	return Response(serializer.data)

@api_view(['POST'])
def taskCreate(request):
	serializer = TaskSerializer(data=request.data)
	if serializer.is_valid():
		serializer.save()
	return Response(serializer.data)

@api_view(['POST'])
def taskUpdate(request, pk):
	tasks = Task.objects.get(id=pk)
	serializer = TaskSerializer(instance=task, data=request.data)
	if serializer.is_valid():
		serializer.save()
	return Response(serializer.data)

@api_view(['DELETE'])
def taskDelete(request, pk):
	tasks = Task.objects.get(id=pk)
	task.delete()
	return Response('Item deleted')


-------------------------------------------------------------------



	

